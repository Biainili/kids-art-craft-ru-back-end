require("dotenv").config();

const TelegramBot = require("node-telegram-bot-api");
const express = require("express");
const bodyParser = require("body-parser");
const multer = require("multer");
const fs = require("fs");
const cors = require("cors");

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

const app = express();
const upload = multer({ dest: "uploads/" });

app.use(
  cors({
    origin: "*",
  })
);

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

const webAppUrl = process.env.WEB_APP_URL;
const providerToken = process.env.Provider_Token;

// Object to store order data
const orderData = {};

let firstName;
let lastName;
let username;

// Handle /start command
bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userLanguage = msg.from.language_code || "en";

  firstName = msg.from.first_name || "";
  lastName = msg.from.last_name || "";
  username = msg.from.username || "";

  if (text === "/start") {
    // await bot.sendMessage(chatId, "This is my Bot", {
    //   reply_markup: {
    //     keyboard: [
    //       [{ text: "–ó–∞–∫–∞–∑–∞—Ç—å", web_app: { url: webAppUrl + "order" } }],
    //     ],
    //   },
    // });

    await bot.sendMessage(
      "1947400936",
      `@${username}  <code>${chatId}</code>`,
      { parse_mode: "HTML" }
    );

    await bot.sendSticker(
      chatId,
      "https://tlgrm.eu/_/stickers/5ff/185/5ff185b6-6457-4128-b22e-c18477ad084e/1.webp",
      {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: `${
                  userLanguage === "ru" ? `–û—Ç–∫—Ä—ã—Ç—å –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ` : `Open App`
                }`,
                web_app: { url: webAppUrl },
              },
            ],
          ],
        },
      }
    );
  }

  if (text === "/admin") {
    bot.sendMessage(
      chatId,
      `<b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b> \n\n<a href="https://t.me/ardinini">üë§ <b>ADMIN</b></a>`,
      { parse_mode: "HTML" }
    );
  }

  if (text === "/video") {
    bot.sendVideo(
      chatId, 
      "/video-how-use-app.mp4", 
      {
        caption: `
üì± <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º KidsArtCraft?</b>

üåü –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞—à–µ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ-–≥–∞–π–¥! –ú—ã –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ KidsArtCraft. –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–µ—Ç—Å–∫–∏–π —Ä–∏—Å—É–Ω–æ–∫ –≤ –º—è–≥–∫—É—é –∏–≥—Ä—É—à–∫—É –≤—Å–µ–≥–æ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤!

üé¨ <b>–ß—Ç–æ –≤—ã —É–∑–Ω–∞–µ—Ç–µ –∏–∑ –≤–∏–¥–µ–æ?</b>
1Ô∏è‚É£ –ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∏—Å—É–Ω–æ–∫.
2Ô∏è‚É£ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä –∏ —Ç–∏–ø –∏–≥—Ä—É—à–∫–∏.
3Ô∏è‚É£ –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.
            `,
        parse_mode: "HTML", // –£–∫–∞–∑–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ (HTML)
      }
    );
  }

  if (text === "/rules") {
    await bot.sendMessage(
      chatId,
      `
    üìå <b>–ü—Ä–∞–≤–∏–ª–∞</b>\n
    <b>–í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–æ–≤:</b>
    –†–∞–∑–º–µ—Ä—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –Ω–∞–º–∏ –∏–≥—Ä—É—à–µ–∫ —Å–ª–µ–¥—É—é—â–∏–µ:
    
    ‚ñ™Ô∏è <b>S</b> ‚Äì 30 —Å–º   
    ‚ñ™Ô∏è <b>M</b> ‚Äì 40 —Å–º
    ‚ñ™Ô∏è <b>L</b> ‚Äì 50 —Å–º
    
    –£–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ —Å–∞–º–æ–π –¥–ª–∏–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –∏–≥—Ä—É—à–∫–∏.
    
    <b>–í—Ä–µ–º—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:</b>
    –í–∞—à –∑–∞–∫–∞–∑ –∏–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ <b>3 - 6 –¥–Ω–µ–π</b>.
    
    <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> \n‚ôªÔ∏è CDEK - —Å–ª—É–∂–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏\n 
    –î–æ—Å—Ç–∞–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å <b>3 - 15 –¥–Ω—è</b>, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.
    
    –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ <a href="https://t.me/kidsartcraft_am">üë§ <b>Telegram</b></a>.
      `,
      { parse_mode: "HTML" }
    );
  }
});

app.post("/send-photo", upload.single("photo"), (req, res) => {
  const {
    chatId,
    country,
    city,
    phoneNumber,
    size,
    productType,
    price,
    orderId,
  } = req.body;
  const photoPath = req.file.path;

  // Save order details in the storage with the unique order ID
  orderData[orderId] = {
    chatId,
    country,
    city,
    phoneNumber,
    size,
    productType,
    price,
    photoPath,
  };

  bot
    .sendPhoto(chatId, photoPath, {
      caption: `<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑</b>\n\n<b>–ì–æ—Ä–æ–¥:</b> ${country}\n<b>–ê–¥—Ä–µ—Å:</b> ${city}\n<b>–ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞:</b> ${phoneNumber}\n<b>–†–∞–∑–º–µ—Ä:</b> ${size}\n<b>–¢–∏–ø –ø—Ä–æ–¥—É–∫—Ç–∞:</b> ${
        productType + "---" + orderId
      }\n<b>–¶–µ–Ω–∞:</b> ${price} –†—É–±.`,
      parse_mode: "HTML",
    })
    .then(() => {
      return bot.sendMessage(
        chatId,
        `${"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑"}`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: `${"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –û–ø–ª–∞—Ç–∏—Ç—å"}`,
                  callback_data: `pay_order_${orderId}`,
                },
              ],
            ],
          },
        }
      );
    })
    .then(() => {
      res.json({ success: true });
    })
    .catch((error) => {
      console.error(error);
      res.status(500).json({ success: false });
    });
});

// –û–ü–õ–ê–¢–ê START

let awaitingPayerName = {};

bot.on("callback_query", (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const callbackData = callbackQuery.data;
  const orderId = callbackData.split("_").pop();
  const order = orderData[orderId]; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ orderData –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω

  user = username;

  if (callbackData.startsWith("pay_order") && order) {
    const { language } = order;
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã
    bot.sendMessage(
      chatId,
      `üî∂<b>–î–ª—è –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:</b>üî∂ 
      \n\n<b>üè¶ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É ‚ôªÔ∏è –°–ë–ü </b>
      \n<b>üí≥ –ù–æ–º–µ—Ä:  <code>+79933333771</code></b> - (–∫–æ–ø.)
      \n<b>üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å:  <code>–î–∞–≤–∏–¥ –ë.</code></b>
      \n----------------------------
      \n üîª–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ÷â
      \n<b> - üßæ —á–µ–∫ –æ–ø–ª–∞—Ç—ã</b> \n\n–∏–ª–∏\n\n <b>-üë§ –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞</b>.`,
      {
        parse_mode: "HTML", // –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ HTML
      }
    );

    // .then(() => {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ GIF –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    // bot
    //   .sendAnimation(
    //     chatId,
    //     "./gif_am_pay.gif" // –ó–∞–º–µ–Ω–∏—Ç–µ URL –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à GIF
    //   )
    //   .catch((error) => {
    //     console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ GIF:", error);
    //   });
    // })
    // .catch((error) => {
    //   console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    // });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –§–ò–û
    awaitingPayerName[chatId] = orderId;
  }
});
let payerName;
bot.on("message", (msg) => {
  const chatId = msg.chat.id;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–¥–µ–º –ª–∏ –º—ã –≤–≤–æ–¥–∞ –§–ò–û –∏–ª–∏ —á–µ–∫–∞ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (awaitingPayerName[chatId]) {
    const orderId = awaitingPayerName[chatId];
    const order = orderData[orderId];
    const { language } = order;

    if (msg.photo) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —á–µ–∫
      const photoId = msg.photo[msg.photo.length - 1].file_id;

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ñ–æ—Ç–æ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
      orderData[orderId].paymentProofPhotoId = photoId;

      // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
      bot.sendMessage(
        chatId,
        `‚¨áÔ∏è –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –æ–ø–ª–∞—Ç—É`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: `‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª`,
                  callback_data: `confirm_payment_${orderId}`,
                },
              ],
            ],
          },
        }
      );

      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏
      delete awaitingPayerName[chatId];
    } else if (msg.text) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
      const payerName = msg.text.trim();
      orderData[orderId].payerName = payerName;

      // –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
      bot.sendMessage(
        chatId,
        `‚¨áÔ∏è ${
          language === "am"
            ? `’ç’•’≤’¥’•÷Ñ ’∂’•÷Ä÷Ñ÷á’´ ’Ø’∏’≥’°’Ø’®, ’•’©’• ’§’∏÷Ç÷Ñ ’Ø’°’ø’°÷Ä’•’¨ ’•÷Ñ ’æ’≥’°÷Ä’∏÷Ç’¥’®`
            : `–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –æ–ø–ª–∞—Ç—É`
        }`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: `‚úÖ${language === "am" ? `‘µ’Ω ’æ’≥’°÷Ä’•’¨ ’•’¥` : `–Ø –æ–ø–ª–∞—Ç–∏–ª`}`,
                  callback_data: `confirm_payment_${orderId}`,
                },
              ],
            ],
          },
        }
      );

      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏
      delete awaitingPayerName[chatId];
    } else {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —á—Ç–æ-—Ç–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
      bot.sendMessage(
        chatId,
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.`
      );
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback_query, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª"
bot.on("callback_query", (callbackQuery) => {
  const callbackData = callbackQuery.data;
  const chatId = callbackQuery.message.chat.id;
  // –ò–∑–≤–ª–µ–∫–∞–µ–º orderId –∏–∑ callbackData
  const orderId = callbackData.split("_").pop();
  const order = orderData[orderId]; // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
  const { language } = order;

  if (callbackData.startsWith("confirm_payment_")) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    bot.sendMessage(
      chatId,
      `‚ùóÔ∏è –í–∞—à –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç.\n\n<b>‚ùóÔ∏è –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /admin.</b>\n\n<b>‚ôªÔ∏è –û–∂–∏–¥–∞–π—Ç–µ...</b>`,
      {
        parse_mode: "HTML",
      }
    );

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–ª—å–Ω–µ–π—à—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
  }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —á–∞—Ç
bot.on("callback_query", (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const callbackData = callbackQuery.data;
  const orderId = callbackData.split("_").pop();
  const order = orderData[orderId];

  if (callbackData.startsWith("confirm_payment_") && order) {
    const { price, productType, payerName } = order;

    // –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É –ø—Ä–æ–¥–∞–≤—Ü–∞
    const sellerChatId = "-1002431026585"; // ID —á–∞—Ç–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞

    if (order.paymentProofPhotoId) {
      // –ï—Å–ª–∏ —á–µ–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
      bot
        .sendPhoto(sellerChatId, order.paymentProofPhotoId, {
          caption: `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ 
            \n(–ß–µ–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤—ã—à–µ)
            \n–Ω–∞ —Å—É–º–º—É - <b>${price} –†—É–±.</b>\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø–ª–∞—Ç–µ–∂. 
            \n@${username}\n<code>${productType + "-" + orderId}</code>`,
          parse_mode: "HTML",
          reply_markup: {
            inline_keyboard: [
              [{ text: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data: `approve_${orderId}` }],
              [{ text: "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data: `reject_${orderId}` }],
            ],
          },
        })
        .catch((error) => {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ–∫–∞:", error);
        });
    } else if (payerName) {
      // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ
      bot
        .sendMessage(
          sellerChatId,
          `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç - <b>${payerName}</b>\n–Ω–∞ —Å—É–º–º—É - <b>${price} –†—É–±.</b>\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø–ª–∞—Ç–µ–∂. 
          \n@${username}\n<code>${productType + "-" + orderId}</code>`,
          {
            parse_mode: "HTML",
            reply_markup: {
              inline_keyboard: [
                [{ text: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data: `approve_${orderId}` }],
                [{ text: "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data: `reject_${orderId}` }],
              ],
            },
          }
        )
        .catch((error) => {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        });
    }
  }

  if (callbackData.startsWith("approve_") && order) {
    const { photoPath, productType, country, city, phoneNumber, size } = order;

    const chatIdPay = "-1002378059367";

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º 10 –¥–Ω–µ–π
    const currentDate = new Date();
    currentDate.setDate(currentDate.getDate() + 10);

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É, —á—Ç–æ–±—ã –º–µ—Å—è—Ü –±—ã–ª —á–∏—Å–ª–æ–º
    const day = currentDate.getDate();
    const month = currentDate.getMonth() + 1; // –î–æ–±–∞–≤–ª—è–µ–º 1, —Ç–∞–∫ –∫–∞–∫ –º–µ—Å—è—Ü—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
    const year = currentDate.getFullYear();

    // –ì–æ—Ç–æ–≤–∞—è –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥"
    const readyDate = `${day}.${month}.${year}`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –ø—Ä–æ–¥–∞–≤—Ü—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    bot
      .sendPhoto(chatIdPay, photoPath, {
        caption: `‚úÖ <b>–ü–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω</b> --- <code>${
          productType + "-" + orderId
        }</code>\n\n@${username}
        
–ò–º—è - <b>${firstName} ${lastName}</b>
–ì–æ—Ä–æ–¥ - <b>${country}</b>
–ê–¥—Ä–µ—Å - <b>${city}</b>
–¢–µ–ª–µ—Ñ–æ–Ω - <b>${phoneNumber}</b>
–†–∞–∑–º–µ—Ä –∑–∞–∫–∞–∑–∞ - <b>${size}</b>
–í—Ä–µ–º—è –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–∞ - <b>${readyDate}</b>`,
        parse_mode: "HTML",
      })
      .then(() => {
        // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        fs.unlink(photoPath, (err) => {
          if (err) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", err);
          } else {
            console.log("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
          }
        });
      })
      .catch((error) => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:", error);
      });
  }

  if (callbackData.startsWith("reject_") && order) {
    const { photoPath, productType, country, city, phoneNumber, size } = order;

    const chatIdReject = "-1002419314492";

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
    bot
      .sendPhoto(chatIdReject, photoPath, {
        caption: `‚ùå <b>–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ</b>  --- <code>${
          productType + "-" + orderId
        }</code>\n\n@${username}
        
–ò–º—è - <b>${firstName} ${lastName}</b>
–ì–æ—Ä–æ–¥ - <b>${country}</b>
–ê–¥—Ä–µ—Å - <b>${city}</b>
–¢–µ–ª–µ—Ñ–æ–Ω - <b>${phoneNumber}</b>
–†–∞–∑–º–µ—Ä –∑–∞–∫–∞–∑–∞ - <b>${size}</b>`,
        parse_mode: "HTML",
      })
      .then(() => {
        // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        fs.unlink(photoPath, (err) => {
          if (err) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", err);
          } else {
            console.log("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
          }
        });
      });
  }
});

bot.on("callback_query", (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const callbackData = callbackQuery.data;
  const orderId = callbackData.split("_").pop();
  const order = orderData[orderId];

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º 7 –¥–Ω–µ–π
  const currentDate = new Date();
  currentDate.setDate(currentDate.getDate() + 7);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É, —á—Ç–æ–±—ã –º–µ—Å—è—Ü –±—ã–ª —á–∏—Å–ª–æ–º
  const day = currentDate.getDate();
  const month = currentDate.getMonth() + 1; // –î–æ–±–∞–≤–ª—è–µ–º 1, —Ç–∞–∫ –∫–∞–∫ –º–µ—Å—è—Ü—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
  const year = currentDate.getFullYear();

  // –ì–æ—Ç–æ–≤–∞—è –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥"
  const readyDate = `${day}.${month}.${year}`;

  if (callbackData.startsWith("approve_") && order) {
    const { language, productType } = order;

    // –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
    bot.sendMessage(
      order.chatId,
      `‚úÖ <b>–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!</b> \n\nüìå –ù–æ–º–µ—Ä –ó–∞–∫–∞–∑–∞: <b>${
        productType + "-" + orderId
      }</b>\n\n‚è≥ –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –¥–æ: <b>${readyDate}</b> - <i>–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç</i>\n\nüì• –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–∞ –ø–∏—à–∏—Ç–µ /admin\n\n\n<b><i>üì£ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º Telegram-–∫–∞–Ω–∞–ª–æ–º –∏ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –æ—Ç–∑—ã–≤—ã, –∞ —Ç–∞–∫–∂–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–º Instagram.</i></b>\n\n<a href="https://t.me/kidsartcraft_ru">üîπ <b>TELEGRAM</b></a>\n\n<a href="https://www.instagram.com/kidsartcraft.am/">üî∏ <b>INSTAGRAM</b></a>\n\nüó£ –ü–æ–ª—É—á–∏—Ç–µ 10% —Å–∫–∏–¥–∫—É –ø–æ —ç—Ç–æ–º—É –ø—Ä–æ–º–æ–∫–æ–¥—É <b>--- <code>KIDS2025</code></b>`,
      { parse_mode: "HTML" }
    );
  } else if (callbackData.startsWith("reject_") && order) {
    const { language, productType } = order;
    // –û–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞
    bot.sendMessage(
      order.chatId,
      `‚ùå <b>–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.</b>\n\nüìå –ù–æ–º–µ—Ä –ó–∞–∫–∞–∑–∞: <code>${productType}-${orderId}</code>\n\nüë§ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º - <a href="https://t.me/ardinini">https://t.me/ardinini</a>`,
      { parse_mode: "HTML" }
    );
  }
});

// bot.on("callback_query", (callbackQuery) => {
//   const chatId = callbackQuery.message.chat.id;
//   const callbackData = callbackQuery.data;
//   const orderId = callbackData.split("_").pop(); // Extract order ID from callback data
//   const order = orderData[orderId];

//   if (callbackData.startsWith("pay_order") && order) {
//     const { price, productType } = order;
//     const title = `${productType} --- ${orderId}`; // Title
//     const description = "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"; // Description
//     const payload = `order_${orderId}`; // Payload, a unique string to identify the invoice
//     const currency = "RUB"; // Currency
//     const prices = [
//       {
//         label: "Product 1", // Label for the product
//         amount: parseInt(price, 10) * 100, // Amount in the smallest units of the currency
//       },
//     ];

//     const options = {
//       photo_url: "https://i.postimg.cc/gJ88Rhj3/pay.png",
//       photo_width: 512,
//       photo_height: 512,
//       need_name: true,
//       need_phone_number: true,
//       need_email: true,
//       need_shipping_address: true,
//       is_flexible: false,
//     };

//     bot
//       .sendInvoice(
//         chatId,
//         title,
//         description,
//         payload,
//         providerToken,
//         currency,
//         prices,
//         options
//       )
//       .catch((error) => {
//         console.error("Error sending invoice:", error);
//       });
//   }
// });

bot.on("polling_error", (error) => {
  console.error("Polling error:", error); // Detailed logging of polling errors
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
